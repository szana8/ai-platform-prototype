services:
    #PHP Service
    api:
        build:
            context: .
            dockerfile: ./Dockerfile
        image: digitalocean.com/php
        container_name: ${APP_CONTAINER_NAME}-api
        tty: true
        working_dir: /var/www
        #ports:
            # - "8080:8080" #reverb port
        volumes:
            - ./api:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/999-overrides.ini
            - ./docker/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        networks:
            - app-network

    #Nginx Service
    nginx:
        image: nginx:alpine
        container_name: ${APP_CONTAINER_NAME}-nginx
        tty: true
        ports:
            - '${APP_PORT}:80'
        volumes:
            - ./api:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        environment:
            - APP_URL=${APP_CONTAINER_NAME}.test
            - APP_WORKSPACE=${APP_CONTAINER_NAME}-api
        networks:
            - app-network

    # Postgres Service
    postgres:
        image: postgres:latest
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        ports:
            - "${DB_PORT:-5432}:5432"
        volumes:
            - '~/.${APP_CONTAINER_NAME}/data/postgres:/var/lib/postgresql/data'
        networks:
            - app-network

    # Redis service
    redis:
        image: 'redis:alpine'
        container_name: ${APP_CONTAINER_NAME}-redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        tty: true
        networks:
            - app-network

    nuxt:
        build:
            context: .
            dockerfile: ./web/Dockerfile
        container_name: ${APP_CONTAINER_NAME}-nuxt
        command: > 
            sh -c "npm install && npm run dev"
        tty: true
        volumes:
            - ./web:/usr/src/nuxt-app
        ports:
           - '${NUXT_PORT:-3000}:3000'
           - "24678:24678"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - app-network

    chat-component:
        image: node:22.12.0
        container_name: ${APP_CONTAINER_NAME}-chat-component
        working_dir: /var/www/html/app/
        command: "npm run dev --host"
        tty: true
        volumes:
             - ./chat-component:/var/www/html/app
        ports:
           - '${CHAT_COMPONENT_PORT:-5173}:5173'
        networks:
            - app-network

    langflow:
        image: langflowai/langflow:latest
        # pull_policy: always
        ports:
            - "7860:7860"
        depends_on:
            - postgres
        environment:
            - LANGFLOW_DATABASE_URL=postgresql://ai-platform:ai-platform@postgres:5432/langflow
            # This variable defines where the logs, file storage, monitor data and secret keys are stored.
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        env_file:
            - ./.env
        volumes:
            - ./.langflow-data:/app/langflow
        networks:
            - app-network


#Docker Networks
networks:
    app-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local